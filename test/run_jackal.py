#!/usr/bin/env python

import numpy
import rospy
from geometry_msgs.msg import Twist
import time

dt = 0.1

u = numpy.array([[1.09519411, 2.46540463],
               [1.15782353, 2.423669  ],
               [1.21605164, 2.38058623],
               [1.26996071, 2.33641619],
               [1.31964938, 2.29140223],
               [1.36523037, 2.24577067],
               [1.40682826, 2.19973058],
               [1.44457734, 2.15347377],
               [1.47861964, 2.10717503],
               [1.50910304, 2.06099247],
               [1.53617961, 2.0150681 ],
               [1.56000401, 1.96952851],
               [1.58073216, 1.92448555],
               [1.59851999, 1.88003721],
               [1.61352237, 1.83626844],
               [1.62589222, 1.79325206],
               [1.63577967, 1.75104964],
               [1.64333146, 1.70971238],
               [1.64869037, 1.669282  ],
               [1.65199482, 1.62979155],
               [1.6533785 , 1.59126628],
               [1.65297013, 1.55372435],
               [1.65089331, 1.51717759],
               [1.64726642, 1.48163219],
               [1.6422025 , 1.44708935],
               [1.63580935, 1.41354584],
               [1.62818948, 1.38099457],
               [1.61944025, 1.34942511],
               [1.60965394, 1.31882411],
               [1.59891788, 1.28917578],
               [1.58731459, 1.26046221],
               [1.57492197, 1.23266375],
               [1.56181341, 1.20575933],
               [1.54805803, 1.17972669],
               [1.53372079, 1.15454269],
               [1.51886275, 1.13018347],
               [1.50354119, 1.1066247 ],
               [1.4878098 , 1.08384171],
               [1.47171891, 1.06180968],
               [1.45531558, 1.04050373],
               [1.43864384, 1.01989908],
               [1.42174484, 0.9999711 ],
               [1.40465696, 0.98069544],
               [1.38741606, 0.96204809],
               [1.37005552, 0.94400542],
               [1.35260645, 0.92654426],
               [1.33509782, 0.90964192],
               [1.31755656, 0.89327626],
               [1.30000769, 0.87742566],
               [1.28247446, 0.8620691 ],
               [1.26497843, 0.84718614],
               [1.24753959, 0.83275693],
               [1.23017646, 0.81876225],
               [1.21290618, 0.80518349],
               [1.19574458, 0.79200263],
               [1.1787063 , 0.77920227],
               [1.16180482, 0.76676562],
               [1.14505259, 0.75467648],
               [1.12846105, 0.74291924],
               [1.11204071, 0.73147887],
               [1.09580124, 0.72034089],
               [1.07975149, 0.70949141],
               [1.06389953, 0.69891703],
               [1.04825278, 0.68860493],
               [1.03281795, 0.67854276],
               [1.01760119, 0.6687187 ],
               [1.00260805, 0.6591214 ],
               [0.98784355, 0.64973997],
               [0.97331224, 0.640564  ],
               [0.95901819, 0.6315835 ],
               [0.94496506, 0.6227889 ],
               [0.93115612, 0.61417107],
               [0.91759425, 0.60572124],
               [0.90428201, 0.59743104],
               [0.89122165, 0.58929247],
               [0.87841512, 0.58129788],
               [0.86586411, 0.57343996],
               [0.85357005, 0.56571172],
               [0.84153416, 0.55810651],
               [0.82975745, 0.55061796],
               [0.81824072, 0.54323998],
               [0.80698462, 0.5359668 ],
               [0.79598963, 0.52879289],
               [0.78525607, 0.52171297],
               [0.77478416, 0.51472202],
               [0.76457397, 0.50781525],
               [0.75462548, 0.50098811],
               [0.74493858, 0.49423626],
               [0.73551306, 0.48755554],
               [0.72634864, 0.48094203],
               [0.71744498, 0.47439199],
               [0.70880169, 0.46790183],
               [0.70041831, 0.46146817],
               [0.69229436, 0.45508779],
               [0.68442933, 0.44875762],
               [0.67682265, 0.44247474],
               [0.66947379, 0.43623639],
               [0.66238215, 0.43003993],
               [0.65554717, 0.42388287],
               [0.64896826, 0.41776284],
               [0.64896826, 0.41776284]])



class movement:
    def __init__(self):
        rospy.init_node('move_robot_node', anonymous=False)
        self.pub_move = rospy.Publisher("/cmd_vel", Twist, queue_size=100)


    def publish_vel(self):
        self.pub_move.publish(self.move)

    def move(self):
        move =Twist()
        move.linear.x = 0
        move.angular.z = 0

        for i in range (len(u)):
            v = u[i]
            move.linear.x = v[0]*dt
            move.angular.z = v[1]*dt
            #while not rospy.is_shutdown():
            self.pub_move.publish(move)   
            time.sleep(dt)
            continue

start = time.time()
mov = movement()
mov.move()
end = time.time()
print(end-start)















